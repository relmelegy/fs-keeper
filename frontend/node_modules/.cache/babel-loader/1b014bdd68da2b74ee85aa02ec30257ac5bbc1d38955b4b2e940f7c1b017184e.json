{"ast":null,"code":"// import React from 'react';\n// import { auth, GoogleAuthProvider } from './firebase';\n\n// const GoogleSignIn = () => {\n//   const signInWithGoogle = () => {\n//     const provider = new GoogleAuthProvider();\n//     auth.signInWithPopup(provider).then((result) => {\n//       // Handle successful sign-in\n//       console.log(result);\n//     }).catch((error) => {\n//       // Handle errors\n//       console.error(error);\n//     });\n//   };\n\n//   return (\n//     <button onClick={signInWithGoogle}>Sign in with Google</button>\n//   );\n// };\n\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nconst auth = getAuth();\nsignInWithPopup(auth, provider).then(result => {\n  // This gives you a Google Access Token. You can use it to access the Google API.\n  const credential = GoogleAuthProvider.credentialFromResult(result);\n  const token = credential.accessToken;\n  // The signed-in user info.\n  const user = result.user;\n  // IdP data available using getAdditionalUserInfo(result)\n  // ...\n}).catch(error => {\n  // Handle Errors here.\n  const errorCode = error.code;\n  const errorMessage = error.message;\n  // The email of the user's account used.\n  const email = error.customData.email;\n  // The AuthCredential type that was used.\n  const credential = GoogleAuthProvider.credentialFromError(error);\n  // ...\n});","map":{"version":3,"names":["getAuth","signInWithPopup","GoogleAuthProvider","auth","provider","then","result","credential","credentialFromResult","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","customData","credentialFromError"],"sources":["/Users/raaide/Library/CloudStorage/GoogleDrive-re2473@columbia.edu/My Drive/Spring24/Full-Stack Dev/Final/frontend/src/components/GoogleSignIn.js"],"sourcesContent":["// import React from 'react';\n// import { auth, GoogleAuthProvider } from './firebase';\n\n// const GoogleSignIn = () => {\n//   const signInWithGoogle = () => {\n//     const provider = new GoogleAuthProvider();\n//     auth.signInWithPopup(provider).then((result) => {\n//       // Handle successful sign-in\n//       console.log(result);\n//     }).catch((error) => {\n//       // Handle errors\n//       console.error(error);\n//     });\n//   };\n\n//   return (\n//     <button onClick={signInWithGoogle}>Sign in with Google</button>\n//   );\n// };\n\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n\nconst auth = getAuth();\nsignInWithPopup(auth, provider)\n  .then((result) => {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken;\n    // The signed-in user info.\n    const user = result.user;\n    // IdP data available using getAdditionalUserInfo(result)\n    // ...\n  }).catch((error) => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.customData.email;\n    // The AuthCredential type that was used.\n    const credential = GoogleAuthProvider.credentialFromError(error);\n    // ...\n  });\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,eAAe;AAE5E,MAAMC,IAAI,GAAGH,OAAO,CAAC,CAAC;AACtBC,eAAe,CAACE,IAAI,EAAEC,QAAQ,CAAC,CAC5BC,IAAI,CAAEC,MAAM,IAAK;EAChB;EACA,MAAMC,UAAU,GAAGL,kBAAkB,CAACM,oBAAoB,CAACF,MAAM,CAAC;EAClE,MAAMG,KAAK,GAAGF,UAAU,CAACG,WAAW;EACpC;EACA,MAAMC,IAAI,GAAGL,MAAM,CAACK,IAAI;EACxB;EACA;AACF,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;EAClB;EACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI;EAC5B,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAAO;EAClC;EACA,MAAMC,KAAK,GAAGL,KAAK,CAACM,UAAU,CAACD,KAAK;EACpC;EACA,MAAMX,UAAU,GAAGL,kBAAkB,CAACkB,mBAAmB,CAACP,KAAK,CAAC;EAChE;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}